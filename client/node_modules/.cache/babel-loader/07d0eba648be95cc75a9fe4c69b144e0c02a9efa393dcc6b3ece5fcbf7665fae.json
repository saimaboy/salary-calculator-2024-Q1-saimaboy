{"ast":null,"code":"var _jsxFileName = \"F:\\\\New folder\\\\salary-calculator-2024-Q1-saimaboy\\\\client\\\\src\\\\pages\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ResetButton from '../components/ResetButton';\nimport EarningsInput from '../components/EarningsInput';\nimport DeductionsInput from '../components/Deductionsinput';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [basicSalary, setBasicSalary] = useState('');\n  const [earnings, setEarnings] = useState([{\n    earningType: '',\n    earningValue: '',\n    epfChecked: false\n  }]);\n  const [deductions, setDeductions] = useState([{\n    deductionType: '',\n    deductionValue: ''\n  }]);\n  const handleBasicSalaryChange = e => {\n    const value = e.target.value;\n    if (value === '' || /^[0-9\\b]+$/.test(value)) {\n      setBasicSalary(value);\n    }\n  };\n  const handleEarningReset = () => {\n    setEarnings([{\n      earningType: '',\n      earningValue: '',\n      epfChecked: false\n    }]);\n  };\n  const handleDeductionReset = () => {\n    setDeductions([{\n      deductionType: '',\n      deductionValue: ''\n    }]);\n  };\n  const handleReset = () => {\n    setBasicSalary('');\n    handleEarningReset();\n    handleDeductionReset();\n  };\n  const handleSubmit = () => {\n    // Calculate total earnings\n    const totalEarnings = parseInt(basicSalary) + earning.reduce((acc, curr) => acc + parseInt(curr.earningValue), 0);\n\n    // Calculate total earnings for EPF\n    const totalEarningsForEPF = parseInt(basicSalary) + earnings.filter(earning => earning.epfChecked).reduce((acc, curr) => acc + parseInt(curr.earningValue), 0);\n\n    // Calculate gross deduction\n    const grossDeduction = deductions.reduce((acc, curr) => acc + parseInt(curr.deductionValue), 0);\n\n    // Calculate gross earnings\n    const grossEarnings = totalEarnings - grossDeduction;\n\n    // Calculate gross salary for EPF\n    const grossSalaryForEPF = totalEarningsForEPF - grossDeduction;\n\n    // Calculate employee EPF\n    const employeeEPF = grossSalaryForEPF * 0.08;\n\n    // Calculate employer EPF\n    const employerEPF = grossSalaryForEPF * 0.12;\n\n    // Calculate employer ETF\n    const employerETF = grossSalaryForEPF * 0.03;\n\n    // Calculate APIT\n    const APIT = grossEarnings * 0.18 - 25500;\n\n    // Calculate net salary\n    const netSalary = grossEarnings - employeeEPF - APIT;\n\n    // Calculate cost to company\n    const costToCompany = grossEarnings + employerEPF + employerETF;\n\n    // Display the results in a popup page\n    const resultPopup = window.open('', '_blank', 'width=600,height=400');\n    resultPopup.document.write(`\n      <h1>Salary Calculation Results</h1>\n      <p>Total Earnings = Basic Salary + Earnings</p>\n      <p>= ${basicSalary} + ${earnings.reduce((acc, curr) => acc + parseInt(curr.earningValue), 0)}</p>\n      <p>= ${totalEarnings}</p>\n      <p>Total Earnings for EPF = Basic Salary + Sum of EPF/ETF Allowed Earnings</p>\n      <p>= ${basicSalary} + ${earnings.filter(earning => earning.epfChecked).reduce((acc, curr) => acc + parseInt(curr.earningValue), 0)}</p>\n      <p>= ${totalEarningsForEPF}</p>\n      <p>Gross Deduction = Sum of Deductions</p>\n      <p>= ${grossDeduction}</p>\n      <p>Gross Earnings = Total Earnings - Gross Deduction</p>\n      <p>= ${totalEarnings} - ${grossDeduction}</p>\n      <p>= ${grossEarnings}</p>\n      <p>Gross Salary for EPF = Total Earnings for EPF - Gross Deduction</p>\n      <p>= ${totalEarningsForEPF} - ${grossDeduction}</p>\n      <p>= ${grossSalaryForEPF}</p>\n      <p>Employee EPF (8%) = Gross Salary for EPF X 8%</p>\n      <p>= ${grossSalaryForEPF} X 8%</p>\n      <p>= ${employeeEPF}</p>\n      <p>Employer EPF (12%) = Gross Salary for EPF X 12%</p>\n      <p>= ${grossSalaryForEPF} X 12%</p>\n      <p>= ${employerEPF}</p>\n      <p>Employer ETF (3%) = Gross Salary for EPF X 3%</p>\n      <p>= ${grossSalaryForEPF} X 3%</p>\n      <p>= ${employerETF}</p>\n      <p>APIT = (Gross Earnings * Tax Percentage) - constant</p>\n      <p>= (${grossEarnings} * 18%) - 25,500</p>\n      <p>= ${APIT}</p>\n      <p>Net Salary = Gross Earnings - Employee EPF - APIT</p>\n      <p>= ${grossEarnings} - ${employeeEPF} - ${APIT}</p>\n      <p>= ${netSalary}</p>\n      <p>Cost To Company = Gross Earnings + Employer EPF (12%) + Employer ETF (3%)</p>\n      <p>= ${grossEarnings} + ${employerEPF} + ${employerETF}</p>\n      <p>= ${costToCompany}</p>\n    `);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-white border border-gray-300 p-10 shadow-sm rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-right\",\n        children: /*#__PURE__*/_jsxDEV(ResetButton, {\n          onReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"calculate-title\",\n        children: \"Calculate Your Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block basic-salary-label\",\n          children: \"Basic Salary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full p-2 border border-gray-300 rounded basic-salary-input\",\n          value: basicSalary,\n          onChange: handleBasicSalaryChange,\n          placeholder: \"Enter Basic Salary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EarningsInput, {\n        earnings: earnings,\n        setEarnings: setEarnings,\n        onReset: handleEarningReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeductionsInput, {\n        deductions: deductions,\n        setDeductions: setDeductions,\n        onReset: handleDeductionReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"T9xf0iCmDtiaq0XuCLi1REYSIiE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ResetButton","EarningsInput","DeductionsInput","jsxDEV","_jsxDEV","App","_s","basicSalary","setBasicSalary","earnings","setEarnings","earningType","earningValue","epfChecked","deductions","setDeductions","deductionType","deductionValue","handleBasicSalaryChange","e","value","target","test","handleEarningReset","handleDeductionReset","handleReset","handleSubmit","totalEarnings","parseInt","earning","reduce","acc","curr","totalEarningsForEPF","filter","grossDeduction","grossEarnings","grossSalaryForEPF","employeeEPF","employerEPF","employerETF","APIT","netSalary","costToCompany","resultPopup","window","open","document","write","className","children","onReset","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["F:/New folder/salary-calculator-2024-Q1-saimaboy/client/src/pages/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ResetButton from '../components/ResetButton';\nimport EarningsInput from '../components/EarningsInput';\nimport DeductionsInput from '../components/Deductionsinput';\nimport '../styles/App.css';\n\nfunction App() {\n  const [basicSalary, setBasicSalary] = useState('');\n  const [earnings, setEarnings] = useState([{ earningType: '', earningValue: '', epfChecked: false }]);\n  const [deductions, setDeductions] = useState([{ deductionType: '', deductionValue: '' }]);\n\n  const handleBasicSalaryChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || /^[0-9\\b]+$/.test(value)) {\n      setBasicSalary(value);\n    }\n  };\n\n  const handleEarningReset = () => {\n    setEarnings([{ earningType: '', earningValue: '', epfChecked: false }]);\n  };\n\n  const handleDeductionReset = () => {\n    setDeductions([{ deductionType: '', deductionValue: '' }]);\n  };\n\n  const handleReset = () => {\n    setBasicSalary('');\n    handleEarningReset();\n    handleDeductionReset();\n  };\n\n  const handleSubmit = () => {\n    // Calculate total earnings\n    const totalEarnings = parseInt(basicSalary) + earning.reduce((acc, curr) => acc + parseInt(curr.earningValue), 0);\n  \n    // Calculate total earnings for EPF\n    const totalEarningsForEPF = parseInt(basicSalary) + earnings.filter(earning => earning.epfChecked).reduce((acc, curr) => acc + parseInt(curr.earningValue), 0);\n  \n    // Calculate gross deduction\n    const grossDeduction = deductions.reduce((acc, curr) => acc + parseInt(curr.deductionValue), 0);\n  \n    // Calculate gross earnings\n    const grossEarnings = totalEarnings - grossDeduction;\n  \n    // Calculate gross salary for EPF\n    const grossSalaryForEPF = totalEarningsForEPF - grossDeduction;\n  \n    // Calculate employee EPF\n    const employeeEPF = grossSalaryForEPF * 0.08;\n  \n    // Calculate employer EPF\n    const employerEPF = grossSalaryForEPF * 0.12;\n  \n    // Calculate employer ETF\n    const employerETF = grossSalaryForEPF * 0.03;\n  \n    // Calculate APIT\n    const APIT = (grossEarnings * 0.18) - 25500;\n  \n    // Calculate net salary\n    const netSalary = grossEarnings - employeeEPF - APIT;\n  \n    // Calculate cost to company\n    const costToCompany = grossEarnings + employerEPF + employerETF;\n  \n    // Display the results in a popup page\n    const resultPopup = window.open('', '_blank', 'width=600,height=400');\n    resultPopup.document.write(`\n      <h1>Salary Calculation Results</h1>\n      <p>Total Earnings = Basic Salary + Earnings</p>\n      <p>= ${basicSalary} + ${earnings.reduce((acc, curr) => acc + parseInt(curr.earningValue), 0)}</p>\n      <p>= ${totalEarnings}</p>\n      <p>Total Earnings for EPF = Basic Salary + Sum of EPF/ETF Allowed Earnings</p>\n      <p>= ${basicSalary} + ${earnings.filter(earning => earning.epfChecked).reduce((acc, curr) => acc + parseInt(curr.earningValue), 0)}</p>\n      <p>= ${totalEarningsForEPF}</p>\n      <p>Gross Deduction = Sum of Deductions</p>\n      <p>= ${grossDeduction}</p>\n      <p>Gross Earnings = Total Earnings - Gross Deduction</p>\n      <p>= ${totalEarnings} - ${grossDeduction}</p>\n      <p>= ${grossEarnings}</p>\n      <p>Gross Salary for EPF = Total Earnings for EPF - Gross Deduction</p>\n      <p>= ${totalEarningsForEPF} - ${grossDeduction}</p>\n      <p>= ${grossSalaryForEPF}</p>\n      <p>Employee EPF (8%) = Gross Salary for EPF X 8%</p>\n      <p>= ${grossSalaryForEPF} X 8%</p>\n      <p>= ${employeeEPF}</p>\n      <p>Employer EPF (12%) = Gross Salary for EPF X 12%</p>\n      <p>= ${grossSalaryForEPF} X 12%</p>\n      <p>= ${employerEPF}</p>\n      <p>Employer ETF (3%) = Gross Salary for EPF X 3%</p>\n      <p>= ${grossSalaryForEPF} X 3%</p>\n      <p>= ${employerETF}</p>\n      <p>APIT = (Gross Earnings * Tax Percentage) - constant</p>\n      <p>= (${grossEarnings} * 18%) - 25,500</p>\n      <p>= ${APIT}</p>\n      <p>Net Salary = Gross Earnings - Employee EPF - APIT</p>\n      <p>= ${grossEarnings} - ${employeeEPF} - ${APIT}</p>\n      <p>= ${netSalary}</p>\n      <p>Cost To Company = Gross Earnings + Employer EPF (12%) + Employer ETF (3%)</p>\n      <p>= ${grossEarnings} + ${employerEPF} + ${employerETF}</p>\n      <p>= ${costToCompany}</p>\n    `);\n  };\n  \n  \n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"relative bg-white border border-gray-300 p-10 shadow-sm rounded-md\">\n        <div className=\"mt-4 text-right\">\n          <ResetButton onReset={handleReset} />\n        </div>\n        <h1 className=\"calculate-title\">Calculate Your Salary</h1>\n        <div className=\"mb-4\">\n          <label className=\"block basic-salary-label\">Basic Salary</label>\n          <input\n            type=\"text\"\n            className=\"w-full p-2 border border-gray-300 rounded basic-salary-input\"\n            value={basicSalary}\n            onChange={handleBasicSalaryChange}\n            placeholder=\"Enter Basic Salary\"\n          />\n        </div>\n        <EarningsInput\n          earnings={earnings}\n          setEarnings={setEarnings}\n          onReset={handleEarningReset}\n        />\n        <DeductionsInput\n          deductions={deductions}\n          setDeductions={setDeductions}\n          onReset={handleDeductionReset}\n        />\n        <div className=\"mt-4 text-center\">\n        <button\n  className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n  onClick={handleSubmit}\n>\n  Submit\n</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}